Terminals unused in grammar

    AND
    OR


State 0 conflicts: 9 shift/reduce
State 12 conflicts: 9 shift/reduce, 1 reduce/reduce
State 14 conflicts: 1 shift/reduce
State 17 conflicts: 8 shift/reduce
State 44 conflicts: 2 reduce/reduce
State 45 conflicts: 2 reduce/reduce


Grammar

    0 $accept: Program $end

    1 Program: DeclList

    2 DeclList: Decl DeclList
    3         | Decl

    4 Decl: FunDecl
    5     | VarDeclList
    6     | StmtList

    7 VarDeclList: %empty
    8            | VarDecl VarDeclList

    9 VarDecl: TYPE ID SEMICOLON
   10        | TYPE ID OBRACK NUMBER CBRACK SEMICOLON

   11 $@1: %empty

   12 FunDecl: TYPE ID OPAREN $@1 ParamDecList CPAREN Block

   13 ParamDecList: %empty
   14             | ParamDecListTail

   15 ParamDecListTail: ParamDecl
   16                 | ParamDecl COMMA ParamDecListTail

   17 ParamDecl: TYPE ID
   18          | TYPE ID OBRACK CBRACK

   19 StmtList: Stmt
   20         | Stmt StmtList

   21 Stmt: Expr SEMICOLON
   22     | IfExpr
   23     | WhileStmt

   24 Expr: Math
   25     | ID EQ ID
   26     | ID EQ NUMBER
   27     | ID EQ ID OPAREN CallList CPAREN
   28     | ID OBRACK Expr CBRACK EQ Expr
   29     | ID EQ Math
   30     | WRITE ID
   31     | WRITEln
   32     | RETURN ID

   33 IfExpr: IF OPAREN RelOps CPAREN Block

   34 $@2: %empty

   35 IfExpr: IF OPAREN RelOps CPAREN Block $@2 ELSE Block

   36 $@3: %empty

   37 WhileStmt: WHILE $@3 OPAREN RelOps CPAREN Block

   38 Block: OCBRACE VarDeclList StmtList CCBRACE

   39 CallList: %empty
   40         | Math
   41         | Math COMMA CallList

   42 Math: Math PLUS Math
   43     | Math MINUS Math
   44     | Math MULTIPLY Math
   45     | Math DIVIDE Math
   46     | OPAREN Math CPAREN
   47     | ID
   48     | NUMBER

   49 RelOps: Math GTE Math
   50       | Math LTE Math
   51       | Math GT Math
   52       | Math LT Math
   53       | Math EQEQ Math
   54       | Math NOTEQ Math


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    TYPE <string> (258) 9 10 12 17 18
    ID <string> (259) 9 10 12 17 18 25 26 27 28 29 30 32 47
    IF <string> (260) 33 35
    ELSE <string> (261) 35
    WHILE <string> (262) 37
    SEMICOLON <char> (263) 9 10 21
    COMMA <char> (264) 16 41
    EQ <char> (265) 25 26 27 28 29
    OPAREN <char> (266) 12 27 33 35 37 46
    CPAREN <char> (267) 12 27 33 35 37 46
    OBRACK <char> (268) 10 18 28
    CBRACK <char> (269) 10 18 28
    OCBRACE <char> (270) 38
    CCBRACE <char> (271) 38
    PLUS <char> (272) 42
    MINUS <char> (273) 43
    MULTIPLY <char> (274) 44
    DIVIDE <char> (275) 45
    NUMBER <number> (276) 10 26 48
    LT <string> (277) 52
    GT <string> (278) 51
    GTE <string> (279) 49
    LTE <string> (280) 50
    EQEQ <string> (281) 53
    NOTEQ <string> (282) 54
    AND <string> (283)
    OR <string> (284)
    WRITE (285) 30
    WRITEln (286) 31
    RETURN (287) 32


Nonterminals, with rules where they appear

    $accept (33)
        on left: 0
    Program <ast> (34)
        on left: 1
        on right: 0
    DeclList <ast> (35)
        on left: 2 3
        on right: 1 2
    Decl <ast> (36)
        on left: 4 5 6
        on right: 2 3
    VarDeclList <ast> (37)
        on left: 7 8
        on right: 5 8 38
    VarDecl <ast> (38)
        on left: 9 10
        on right: 8
    FunDecl <ast> (39)
        on left: 12
        on right: 4
    $@1 (40)
        on left: 11
        on right: 12
    ParamDecList <ast> (41)
        on left: 13 14
        on right: 12
    ParamDecListTail <ast> (42)
        on left: 15 16
        on right: 14 16
    ParamDecl <ast> (43)
        on left: 17 18
        on right: 15 16
    StmtList <ast> (44)
        on left: 19 20
        on right: 6 20 38
    Stmt <ast> (45)
        on left: 21 22 23
        on right: 19 20
    Expr <ast> (46)
        on left: 24 25 26 27 28 29 30 31 32
        on right: 21 28
    IfExpr <ast> (47)
        on left: 33 35
        on right: 22
    $@2 (48)
        on left: 34
        on right: 35
    WhileStmt <ast> (49)
        on left: 37
        on right: 23
    $@3 (50)
        on left: 36
        on right: 37
    Block <ast> (51)
        on left: 38
        on right: 12 33 35 37
    CallList <ast> (52)
        on left: 39 40 41
        on right: 27 41
    Math <ast> (53)
        on left: 42 43 44 45 46 47 48
        on right: 24 29 40 41 42 43 44 45 46 49 50 51 52 53 54
    RelOps <ast> (54)
        on left: 49 50 51 52 53 54
        on right: 33 35 37


State 0

    0 $accept: . Program $end

    TYPE     shift, and go to state 1
    ID       shift, and go to state 2
    IF       shift, and go to state 3
    WHILE    shift, and go to state 4
    OPAREN   shift, and go to state 5
    NUMBER   shift, and go to state 6
    WRITE    shift, and go to state 7
    WRITEln  shift, and go to state 8
    RETURN   shift, and go to state 9

    TYPE      [reduce using rule 7 (VarDeclList)]
    ID        [reduce using rule 7 (VarDeclList)]
    IF        [reduce using rule 7 (VarDeclList)]
    WHILE     [reduce using rule 7 (VarDeclList)]
    OPAREN    [reduce using rule 7 (VarDeclList)]
    NUMBER    [reduce using rule 7 (VarDeclList)]
    WRITE     [reduce using rule 7 (VarDeclList)]
    WRITEln   [reduce using rule 7 (VarDeclList)]
    RETURN    [reduce using rule 7 (VarDeclList)]
    $default  reduce using rule 7 (VarDeclList)

    Program      go to state 10
    DeclList     go to state 11
    Decl         go to state 12
    VarDeclList  go to state 13
    VarDecl      go to state 14
    FunDecl      go to state 15
    StmtList     go to state 16
    Stmt         go to state 17
    Expr         go to state 18
    IfExpr       go to state 19
    WhileStmt    go to state 20
    Math         go to state 21


State 1

    9 VarDecl: TYPE . ID SEMICOLON
   10        | TYPE . ID OBRACK NUMBER CBRACK SEMICOLON
   12 FunDecl: TYPE . ID OPAREN $@1 ParamDecList CPAREN Block

    ID  shift, and go to state 22


State 2

   25 Expr: ID . EQ ID
   26     | ID . EQ NUMBER
   27     | ID . EQ ID OPAREN CallList CPAREN
   28     | ID . OBRACK Expr CBRACK EQ Expr
   29     | ID . EQ Math
   47 Math: ID .

    EQ      shift, and go to state 23
    OBRACK  shift, and go to state 24

    $default  reduce using rule 47 (Math)


State 3

   33 IfExpr: IF . OPAREN RelOps CPAREN Block
   35       | IF . OPAREN RelOps CPAREN Block $@2 ELSE Block

    OPAREN  shift, and go to state 25


State 4

   37 WhileStmt: WHILE . $@3 OPAREN RelOps CPAREN Block

    $default  reduce using rule 36 ($@3)

    $@3  go to state 26


State 5

   46 Math: OPAREN . Math CPAREN

    ID      shift, and go to state 27
    OPAREN  shift, and go to state 5
    NUMBER  shift, and go to state 6

    Math  go to state 28


State 6

   48 Math: NUMBER .

    $default  reduce using rule 48 (Math)


State 7

   30 Expr: WRITE . ID

    ID  shift, and go to state 29


State 8

   31 Expr: WRITEln .

    $default  reduce using rule 31 (Expr)


State 9

   32 Expr: RETURN . ID

    ID  shift, and go to state 30


State 10

    0 $accept: Program . $end

    $end  shift, and go to state 31


State 11

    1 Program: DeclList .

    $default  reduce using rule 1 (Program)


State 12

    2 DeclList: Decl . DeclList
    3         | Decl .

    TYPE     shift, and go to state 1
    ID       shift, and go to state 2
    IF       shift, and go to state 3
    WHILE    shift, and go to state 4
    OPAREN   shift, and go to state 5
    NUMBER   shift, and go to state 6
    WRITE    shift, and go to state 7
    WRITEln  shift, and go to state 8
    RETURN   shift, and go to state 9

    $end      reduce using rule 3 (DeclList)
    $end      [reduce using rule 7 (VarDeclList)]
    TYPE      [reduce using rule 7 (VarDeclList)]
    ID        [reduce using rule 7 (VarDeclList)]
    IF        [reduce using rule 7 (VarDeclList)]
    WHILE     [reduce using rule 7 (VarDeclList)]
    OPAREN    [reduce using rule 7 (VarDeclList)]
    NUMBER    [reduce using rule 7 (VarDeclList)]
    WRITE     [reduce using rule 7 (VarDeclList)]
    WRITEln   [reduce using rule 7 (VarDeclList)]
    RETURN    [reduce using rule 7 (VarDeclList)]
    $default  reduce using rule 3 (DeclList)

    DeclList     go to state 32
    Decl         go to state 12
    VarDeclList  go to state 13
    VarDecl      go to state 14
    FunDecl      go to state 15
    StmtList     go to state 16
    Stmt         go to state 17
    Expr         go to state 18
    IfExpr       go to state 19
    WhileStmt    go to state 20
    Math         go to state 21


State 13

    5 Decl: VarDeclList .

    $default  reduce using rule 5 (Decl)


State 14

    8 VarDeclList: VarDecl . VarDeclList

    TYPE  shift, and go to state 33

    TYPE      [reduce using rule 7 (VarDeclList)]
    $default  reduce using rule 7 (VarDeclList)

    VarDeclList  go to state 34
    VarDecl      go to state 14


State 15

    4 Decl: FunDecl .

    $default  reduce using rule 4 (Decl)


State 16

    6 Decl: StmtList .

    $default  reduce using rule 6 (Decl)


State 17

   19 StmtList: Stmt .
   20         | Stmt . StmtList

    ID       shift, and go to state 2
    IF       shift, and go to state 3
    WHILE    shift, and go to state 4
    OPAREN   shift, and go to state 5
    NUMBER   shift, and go to state 6
    WRITE    shift, and go to state 7
    WRITEln  shift, and go to state 8
    RETURN   shift, and go to state 9

    ID        [reduce using rule 19 (StmtList)]
    IF        [reduce using rule 19 (StmtList)]
    WHILE     [reduce using rule 19 (StmtList)]
    OPAREN    [reduce using rule 19 (StmtList)]
    NUMBER    [reduce using rule 19 (StmtList)]
    WRITE     [reduce using rule 19 (StmtList)]
    WRITEln   [reduce using rule 19 (StmtList)]
    RETURN    [reduce using rule 19 (StmtList)]
    $default  reduce using rule 19 (StmtList)

    StmtList   go to state 35
    Stmt       go to state 17
    Expr       go to state 18
    IfExpr     go to state 19
    WhileStmt  go to state 20
    Math       go to state 21


State 18

   21 Stmt: Expr . SEMICOLON

    SEMICOLON  shift, and go to state 36


State 19

   22 Stmt: IfExpr .

    $default  reduce using rule 22 (Stmt)


State 20

   23 Stmt: WhileStmt .

    $default  reduce using rule 23 (Stmt)


State 21

   24 Expr: Math .
   42 Math: Math . PLUS Math
   43     | Math . MINUS Math
   44     | Math . MULTIPLY Math
   45     | Math . DIVIDE Math

    PLUS      shift, and go to state 37
    MINUS     shift, and go to state 38
    MULTIPLY  shift, and go to state 39
    DIVIDE    shift, and go to state 40

    $default  reduce using rule 24 (Expr)


State 22

    9 VarDecl: TYPE ID . SEMICOLON
   10        | TYPE ID . OBRACK NUMBER CBRACK SEMICOLON
   12 FunDecl: TYPE ID . OPAREN $@1 ParamDecList CPAREN Block

    SEMICOLON  shift, and go to state 41
    OPAREN     shift, and go to state 42
    OBRACK     shift, and go to state 43


State 23

   25 Expr: ID EQ . ID
   26     | ID EQ . NUMBER
   27     | ID EQ . ID OPAREN CallList CPAREN
   29     | ID EQ . Math

    ID      shift, and go to state 44
    OPAREN  shift, and go to state 5
    NUMBER  shift, and go to state 45

    Math  go to state 46


State 24

   28 Expr: ID OBRACK . Expr CBRACK EQ Expr

    ID       shift, and go to state 2
    OPAREN   shift, and go to state 5
    NUMBER   shift, and go to state 6
    WRITE    shift, and go to state 7
    WRITEln  shift, and go to state 8
    RETURN   shift, and go to state 9

    Expr  go to state 47
    Math  go to state 21


State 25

   33 IfExpr: IF OPAREN . RelOps CPAREN Block
   35       | IF OPAREN . RelOps CPAREN Block $@2 ELSE Block

    ID      shift, and go to state 27
    OPAREN  shift, and go to state 5
    NUMBER  shift, and go to state 6

    Math    go to state 48
    RelOps  go to state 49


State 26

   37 WhileStmt: WHILE $@3 . OPAREN RelOps CPAREN Block

    OPAREN  shift, and go to state 50


State 27

   47 Math: ID .

    $default  reduce using rule 47 (Math)


State 28

   42 Math: Math . PLUS Math
   43     | Math . MINUS Math
   44     | Math . MULTIPLY Math
   45     | Math . DIVIDE Math
   46     | OPAREN Math . CPAREN

    CPAREN    shift, and go to state 51
    PLUS      shift, and go to state 37
    MINUS     shift, and go to state 38
    MULTIPLY  shift, and go to state 39
    DIVIDE    shift, and go to state 40


State 29

   30 Expr: WRITE ID .

    $default  reduce using rule 30 (Expr)


State 30

   32 Expr: RETURN ID .

    $default  reduce using rule 32 (Expr)


State 31

    0 $accept: Program $end .

    $default  accept


State 32

    2 DeclList: Decl DeclList .

    $default  reduce using rule 2 (DeclList)


State 33

    9 VarDecl: TYPE . ID SEMICOLON
   10        | TYPE . ID OBRACK NUMBER CBRACK SEMICOLON

    ID  shift, and go to state 52


State 34

    8 VarDeclList: VarDecl VarDeclList .

    $default  reduce using rule 8 (VarDeclList)


State 35

   20 StmtList: Stmt StmtList .

    $default  reduce using rule 20 (StmtList)


State 36

   21 Stmt: Expr SEMICOLON .

    $default  reduce using rule 21 (Stmt)


State 37

   42 Math: Math PLUS . Math

    ID      shift, and go to state 27
    OPAREN  shift, and go to state 5
    NUMBER  shift, and go to state 6

    Math  go to state 53


State 38

   43 Math: Math MINUS . Math

    ID      shift, and go to state 27
    OPAREN  shift, and go to state 5
    NUMBER  shift, and go to state 6

    Math  go to state 54


State 39

   44 Math: Math MULTIPLY . Math

    ID      shift, and go to state 27
    OPAREN  shift, and go to state 5
    NUMBER  shift, and go to state 6

    Math  go to state 55


State 40

   45 Math: Math DIVIDE . Math

    ID      shift, and go to state 27
    OPAREN  shift, and go to state 5
    NUMBER  shift, and go to state 6

    Math  go to state 56


State 41

    9 VarDecl: TYPE ID SEMICOLON .

    $default  reduce using rule 9 (VarDecl)


State 42

   12 FunDecl: TYPE ID OPAREN . $@1 ParamDecList CPAREN Block

    $default  reduce using rule 11 ($@1)

    $@1  go to state 57


State 43

   10 VarDecl: TYPE ID OBRACK . NUMBER CBRACK SEMICOLON

    NUMBER  shift, and go to state 58


State 44

   25 Expr: ID EQ ID .
   27     | ID EQ ID . OPAREN CallList CPAREN
   47 Math: ID .

    OPAREN  shift, and go to state 59

    SEMICOLON  reduce using rule 25 (Expr)
    SEMICOLON  [reduce using rule 47 (Math)]
    CBRACK     reduce using rule 25 (Expr)
    CBRACK     [reduce using rule 47 (Math)]
    $default   reduce using rule 47 (Math)


State 45

   26 Expr: ID EQ NUMBER .
   48 Math: NUMBER .

    SEMICOLON  reduce using rule 26 (Expr)
    SEMICOLON  [reduce using rule 48 (Math)]
    CBRACK     reduce using rule 26 (Expr)
    CBRACK     [reduce using rule 48 (Math)]
    $default   reduce using rule 48 (Math)


State 46

   29 Expr: ID EQ Math .
   42 Math: Math . PLUS Math
   43     | Math . MINUS Math
   44     | Math . MULTIPLY Math
   45     | Math . DIVIDE Math

    PLUS      shift, and go to state 37
    MINUS     shift, and go to state 38
    MULTIPLY  shift, and go to state 39
    DIVIDE    shift, and go to state 40

    $default  reduce using rule 29 (Expr)


State 47

   28 Expr: ID OBRACK Expr . CBRACK EQ Expr

    CBRACK  shift, and go to state 60


State 48

   42 Math: Math . PLUS Math
   43     | Math . MINUS Math
   44     | Math . MULTIPLY Math
   45     | Math . DIVIDE Math
   49 RelOps: Math . GTE Math
   50       | Math . LTE Math
   51       | Math . GT Math
   52       | Math . LT Math
   53       | Math . EQEQ Math
   54       | Math . NOTEQ Math

    PLUS      shift, and go to state 37
    MINUS     shift, and go to state 38
    MULTIPLY  shift, and go to state 39
    DIVIDE    shift, and go to state 40
    LT        shift, and go to state 61
    GT        shift, and go to state 62
    GTE       shift, and go to state 63
    LTE       shift, and go to state 64
    EQEQ      shift, and go to state 65
    NOTEQ     shift, and go to state 66


State 49

   33 IfExpr: IF OPAREN RelOps . CPAREN Block
   35       | IF OPAREN RelOps . CPAREN Block $@2 ELSE Block

    CPAREN  shift, and go to state 67


State 50

   37 WhileStmt: WHILE $@3 OPAREN . RelOps CPAREN Block

    ID      shift, and go to state 27
    OPAREN  shift, and go to state 5
    NUMBER  shift, and go to state 6

    Math    go to state 48
    RelOps  go to state 68


State 51

   46 Math: OPAREN Math CPAREN .

    $default  reduce using rule 46 (Math)


State 52

    9 VarDecl: TYPE ID . SEMICOLON
   10        | TYPE ID . OBRACK NUMBER CBRACK SEMICOLON

    SEMICOLON  shift, and go to state 41
    OBRACK     shift, and go to state 43


State 53

   42 Math: Math . PLUS Math
   42     | Math PLUS Math .
   43     | Math . MINUS Math
   44     | Math . MULTIPLY Math
   45     | Math . DIVIDE Math

    MULTIPLY  shift, and go to state 39
    DIVIDE    shift, and go to state 40

    $default  reduce using rule 42 (Math)


State 54

   42 Math: Math . PLUS Math
   43     | Math . MINUS Math
   43     | Math MINUS Math .
   44     | Math . MULTIPLY Math
   45     | Math . DIVIDE Math

    MULTIPLY  shift, and go to state 39
    DIVIDE    shift, and go to state 40

    $default  reduce using rule 43 (Math)


State 55

   42 Math: Math . PLUS Math
   43     | Math . MINUS Math
   44     | Math . MULTIPLY Math
   44     | Math MULTIPLY Math .
   45     | Math . DIVIDE Math

    $default  reduce using rule 44 (Math)


State 56

   42 Math: Math . PLUS Math
   43     | Math . MINUS Math
   44     | Math . MULTIPLY Math
   45     | Math . DIVIDE Math
   45     | Math DIVIDE Math .

    $default  reduce using rule 45 (Math)


State 57

   12 FunDecl: TYPE ID OPAREN $@1 . ParamDecList CPAREN Block

    TYPE  shift, and go to state 69

    $default  reduce using rule 13 (ParamDecList)

    ParamDecList      go to state 70
    ParamDecListTail  go to state 71
    ParamDecl         go to state 72


State 58

   10 VarDecl: TYPE ID OBRACK NUMBER . CBRACK SEMICOLON

    CBRACK  shift, and go to state 73


State 59

   27 Expr: ID EQ ID OPAREN . CallList CPAREN

    ID      shift, and go to state 27
    OPAREN  shift, and go to state 5
    NUMBER  shift, and go to state 6

    $default  reduce using rule 39 (CallList)

    CallList  go to state 74
    Math      go to state 75


State 60

   28 Expr: ID OBRACK Expr CBRACK . EQ Expr

    EQ  shift, and go to state 76


State 61

   52 RelOps: Math LT . Math

    ID      shift, and go to state 27
    OPAREN  shift, and go to state 5
    NUMBER  shift, and go to state 6

    Math  go to state 77


State 62

   51 RelOps: Math GT . Math

    ID      shift, and go to state 27
    OPAREN  shift, and go to state 5
    NUMBER  shift, and go to state 6

    Math  go to state 78


State 63

   49 RelOps: Math GTE . Math

    ID      shift, and go to state 27
    OPAREN  shift, and go to state 5
    NUMBER  shift, and go to state 6

    Math  go to state 79


State 64

   50 RelOps: Math LTE . Math

    ID      shift, and go to state 27
    OPAREN  shift, and go to state 5
    NUMBER  shift, and go to state 6

    Math  go to state 80


State 65

   53 RelOps: Math EQEQ . Math

    ID      shift, and go to state 27
    OPAREN  shift, and go to state 5
    NUMBER  shift, and go to state 6

    Math  go to state 81


State 66

   54 RelOps: Math NOTEQ . Math

    ID      shift, and go to state 27
    OPAREN  shift, and go to state 5
    NUMBER  shift, and go to state 6

    Math  go to state 82


State 67

   33 IfExpr: IF OPAREN RelOps CPAREN . Block
   35       | IF OPAREN RelOps CPAREN . Block $@2 ELSE Block

    OCBRACE  shift, and go to state 83

    Block  go to state 84


State 68

   37 WhileStmt: WHILE $@3 OPAREN RelOps . CPAREN Block

    CPAREN  shift, and go to state 85


State 69

   17 ParamDecl: TYPE . ID
   18          | TYPE . ID OBRACK CBRACK

    ID  shift, and go to state 86


State 70

   12 FunDecl: TYPE ID OPAREN $@1 ParamDecList . CPAREN Block

    CPAREN  shift, and go to state 87


State 71

   14 ParamDecList: ParamDecListTail .

    $default  reduce using rule 14 (ParamDecList)


State 72

   15 ParamDecListTail: ParamDecl .
   16                 | ParamDecl . COMMA ParamDecListTail

    COMMA  shift, and go to state 88

    $default  reduce using rule 15 (ParamDecListTail)


State 73

   10 VarDecl: TYPE ID OBRACK NUMBER CBRACK . SEMICOLON

    SEMICOLON  shift, and go to state 89


State 74

   27 Expr: ID EQ ID OPAREN CallList . CPAREN

    CPAREN  shift, and go to state 90


State 75

   40 CallList: Math .
   41         | Math . COMMA CallList
   42 Math: Math . PLUS Math
   43     | Math . MINUS Math
   44     | Math . MULTIPLY Math
   45     | Math . DIVIDE Math

    COMMA     shift, and go to state 91
    PLUS      shift, and go to state 37
    MINUS     shift, and go to state 38
    MULTIPLY  shift, and go to state 39
    DIVIDE    shift, and go to state 40

    $default  reduce using rule 40 (CallList)


State 76

   28 Expr: ID OBRACK Expr CBRACK EQ . Expr

    ID       shift, and go to state 2
    OPAREN   shift, and go to state 5
    NUMBER   shift, and go to state 6
    WRITE    shift, and go to state 7
    WRITEln  shift, and go to state 8
    RETURN   shift, and go to state 9

    Expr  go to state 92
    Math  go to state 21


State 77

   42 Math: Math . PLUS Math
   43     | Math . MINUS Math
   44     | Math . MULTIPLY Math
   45     | Math . DIVIDE Math
   52 RelOps: Math LT Math .

    PLUS      shift, and go to state 37
    MINUS     shift, and go to state 38
    MULTIPLY  shift, and go to state 39
    DIVIDE    shift, and go to state 40

    $default  reduce using rule 52 (RelOps)


State 78

   42 Math: Math . PLUS Math
   43     | Math . MINUS Math
   44     | Math . MULTIPLY Math
   45     | Math . DIVIDE Math
   51 RelOps: Math GT Math .

    PLUS      shift, and go to state 37
    MINUS     shift, and go to state 38
    MULTIPLY  shift, and go to state 39
    DIVIDE    shift, and go to state 40

    $default  reduce using rule 51 (RelOps)


State 79

   42 Math: Math . PLUS Math
   43     | Math . MINUS Math
   44     | Math . MULTIPLY Math
   45     | Math . DIVIDE Math
   49 RelOps: Math GTE Math .

    PLUS      shift, and go to state 37
    MINUS     shift, and go to state 38
    MULTIPLY  shift, and go to state 39
    DIVIDE    shift, and go to state 40

    $default  reduce using rule 49 (RelOps)


State 80

   42 Math: Math . PLUS Math
   43     | Math . MINUS Math
   44     | Math . MULTIPLY Math
   45     | Math . DIVIDE Math
   50 RelOps: Math LTE Math .

    PLUS      shift, and go to state 37
    MINUS     shift, and go to state 38
    MULTIPLY  shift, and go to state 39
    DIVIDE    shift, and go to state 40

    $default  reduce using rule 50 (RelOps)


State 81

   42 Math: Math . PLUS Math
   43     | Math . MINUS Math
   44     | Math . MULTIPLY Math
   45     | Math . DIVIDE Math
   53 RelOps: Math EQEQ Math .

    PLUS      shift, and go to state 37
    MINUS     shift, and go to state 38
    MULTIPLY  shift, and go to state 39
    DIVIDE    shift, and go to state 40

    $default  reduce using rule 53 (RelOps)


State 82

   42 Math: Math . PLUS Math
   43     | Math . MINUS Math
   44     | Math . MULTIPLY Math
   45     | Math . DIVIDE Math
   54 RelOps: Math NOTEQ Math .

    PLUS      shift, and go to state 37
    MINUS     shift, and go to state 38
    MULTIPLY  shift, and go to state 39
    DIVIDE    shift, and go to state 40

    $default  reduce using rule 54 (RelOps)


State 83

   38 Block: OCBRACE . VarDeclList StmtList CCBRACE

    TYPE  shift, and go to state 33

    $default  reduce using rule 7 (VarDeclList)

    VarDeclList  go to state 93
    VarDecl      go to state 14


State 84

   33 IfExpr: IF OPAREN RelOps CPAREN Block .
   35       | IF OPAREN RelOps CPAREN Block . $@2 ELSE Block

    ELSE      reduce using rule 34 ($@2)
    $default  reduce using rule 33 (IfExpr)

    $@2  go to state 94


State 85

   37 WhileStmt: WHILE $@3 OPAREN RelOps CPAREN . Block

    OCBRACE  shift, and go to state 83

    Block  go to state 95


State 86

   17 ParamDecl: TYPE ID .
   18          | TYPE ID . OBRACK CBRACK

    OBRACK  shift, and go to state 96

    $default  reduce using rule 17 (ParamDecl)


State 87

   12 FunDecl: TYPE ID OPAREN $@1 ParamDecList CPAREN . Block

    OCBRACE  shift, and go to state 83

    Block  go to state 97


State 88

   16 ParamDecListTail: ParamDecl COMMA . ParamDecListTail

    TYPE  shift, and go to state 69

    ParamDecListTail  go to state 98
    ParamDecl         go to state 72


State 89

   10 VarDecl: TYPE ID OBRACK NUMBER CBRACK SEMICOLON .

    $default  reduce using rule 10 (VarDecl)


State 90

   27 Expr: ID EQ ID OPAREN CallList CPAREN .

    $default  reduce using rule 27 (Expr)


State 91

   41 CallList: Math COMMA . CallList

    ID      shift, and go to state 27
    OPAREN  shift, and go to state 5
    NUMBER  shift, and go to state 6

    $default  reduce using rule 39 (CallList)

    CallList  go to state 99
    Math      go to state 75


State 92

   28 Expr: ID OBRACK Expr CBRACK EQ Expr .

    $default  reduce using rule 28 (Expr)


State 93

   38 Block: OCBRACE VarDeclList . StmtList CCBRACE

    ID       shift, and go to state 2
    IF       shift, and go to state 3
    WHILE    shift, and go to state 4
    OPAREN   shift, and go to state 5
    NUMBER   shift, and go to state 6
    WRITE    shift, and go to state 7
    WRITEln  shift, and go to state 8
    RETURN   shift, and go to state 9

    StmtList   go to state 100
    Stmt       go to state 17
    Expr       go to state 18
    IfExpr     go to state 19
    WhileStmt  go to state 20
    Math       go to state 21


State 94

   35 IfExpr: IF OPAREN RelOps CPAREN Block $@2 . ELSE Block

    ELSE  shift, and go to state 101


State 95

   37 WhileStmt: WHILE $@3 OPAREN RelOps CPAREN Block .

    $default  reduce using rule 37 (WhileStmt)


State 96

   18 ParamDecl: TYPE ID OBRACK . CBRACK

    CBRACK  shift, and go to state 102


State 97

   12 FunDecl: TYPE ID OPAREN $@1 ParamDecList CPAREN Block .

    $default  reduce using rule 12 (FunDecl)


State 98

   16 ParamDecListTail: ParamDecl COMMA ParamDecListTail .

    $default  reduce using rule 16 (ParamDecListTail)


State 99

   41 CallList: Math COMMA CallList .

    $default  reduce using rule 41 (CallList)


State 100

   38 Block: OCBRACE VarDeclList StmtList . CCBRACE

    CCBRACE  shift, and go to state 103


State 101

   35 IfExpr: IF OPAREN RelOps CPAREN Block $@2 ELSE . Block

    OCBRACE  shift, and go to state 83

    Block  go to state 104


State 102

   18 ParamDecl: TYPE ID OBRACK CBRACK .

    $default  reduce using rule 18 (ParamDecl)


State 103

   38 Block: OCBRACE VarDeclList StmtList CCBRACE .

    $default  reduce using rule 38 (Block)


State 104

   35 IfExpr: IF OPAREN RelOps CPAREN Block $@2 ELSE Block .

    $default  reduce using rule 35 (IfExpr)
