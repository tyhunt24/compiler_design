Terminals unused in grammar

    AND
    OR


State 0 conflicts: 8 shift/reduce
State 11 conflicts: 8 shift/reduce, 1 reduce/reduce
State 13 conflicts: 1 shift/reduce
State 16 conflicts: 7 shift/reduce
State 43 conflicts: 2 reduce/reduce
State 44 conflicts: 2 reduce/reduce


Grammar

    0 $accept: Program $end

    1 Program: DeclList

    2 DeclList: Decl DeclList
    3         | Decl

    4 Decl: FunDecl
    5     | VarDeclList
    6     | StmtList

    7 VarDeclList: %empty
    8            | VarDecl VarDeclList

    9 VarDecl: TYPE ID SEMICOLON
   10        | TYPE ID OBRACK NUMBER CBRACK SEMICOLON

   11 $@1: %empty

   12 FunDecl: TYPE ID OPAREN $@1 ParamDecList CPAREN Block

   13 ParamDecList: %empty
   14             | ParamDecListTail

   15 ParamDecListTail: ParamDecl
   16                 | ParamDecl COMMA ParamDecListTail

   17 ParamDecl: TYPE ID
   18          | TYPE ID OBRACK CBRACK

   19 StmtList: Stmt
   20         | Stmt StmtList

   21 Stmt: Expr SEMICOLON
   22     | IfExpr
   23     | WhileStmt

   24 Expr: Math
   25     | ID EQ ID
   26     | ID EQ NUMBER
   27     | ID EQ ID OPAREN CallList CPAREN
   28     | ID OBRACK Expr CBRACK EQ Expr
   29     | ID EQ Math
   30     | WRITE ID
   31     | RETURN ID

   32 IfExpr: IF OPAREN RelOps CPAREN Block

   33 $@2: %empty

   34 IfExpr: IF OPAREN RelOps CPAREN Block $@2 ELSE Block

   35 WhileStmt: WHILE OPAREN RelOps CPAREN Block

   36 Block: OCBRACE VarDeclList StmtList CCBRACE

   37 CallList: %empty
   38         | Math
   39         | Math COMMA CallList

   40 Math: Math PLUS Math
   41     | Math MINUS Math
   42     | Math MULTIPLY Math
   43     | Math DIVIDE Math
   44     | OPAREN Math CPAREN
   45     | ID
   46     | NUMBER

   47 RelOps: Math GTE Math
   48       | Math LTE Math
   49       | Math GT Math
   50       | Math LT Math
   51       | Math EQEQ Math
   52       | Math NOTEQ Math


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    TYPE <string> (258) 9 10 12 17 18
    ID <string> (259) 9 10 12 17 18 25 26 27 28 29 30 31 45
    IF <string> (260) 32 34
    ELSE <string> (261) 34
    WHILE <string> (262) 35
    SEMICOLON <char> (263) 9 10 21
    COMMA <char> (264) 16 39
    EQ <char> (265) 25 26 27 28 29
    OPAREN <char> (266) 12 27 32 34 35 44
    CPAREN <char> (267) 12 27 32 34 35 44
    OBRACK <char> (268) 10 18 28
    CBRACK <char> (269) 10 18 28
    OCBRACE <char> (270) 36
    CCBRACE <char> (271) 36
    PLUS <char> (272) 40
    MINUS <char> (273) 41
    MULTIPLY <char> (274) 42
    DIVIDE <char> (275) 43
    NUMBER <number> (276) 10 26 46
    LT <string> (277) 50
    GT <string> (278) 49
    GTE <string> (279) 47
    LTE <string> (280) 48
    EQEQ <string> (281) 51
    NOTEQ <string> (282) 52
    AND <string> (283)
    OR <string> (284)
    WRITE (285) 30
    RETURN (286) 31


Nonterminals, with rules where they appear

    $accept (32)
        on left: 0
    Program <ast> (33)
        on left: 1
        on right: 0
    DeclList <ast> (34)
        on left: 2 3
        on right: 1 2
    Decl <ast> (35)
        on left: 4 5 6
        on right: 2 3
    VarDeclList <ast> (36)
        on left: 7 8
        on right: 5 8 36
    VarDecl <ast> (37)
        on left: 9 10
        on right: 8
    FunDecl <ast> (38)
        on left: 12
        on right: 4
    $@1 (39)
        on left: 11
        on right: 12
    ParamDecList <ast> (40)
        on left: 13 14
        on right: 12
    ParamDecListTail <ast> (41)
        on left: 15 16
        on right: 14 16
    ParamDecl <ast> (42)
        on left: 17 18
        on right: 15 16
    StmtList <ast> (43)
        on left: 19 20
        on right: 6 20 36
    Stmt <ast> (44)
        on left: 21 22 23
        on right: 19 20
    Expr <ast> (45)
        on left: 24 25 26 27 28 29 30 31
        on right: 21 28
    IfExpr <ast> (46)
        on left: 32 34
        on right: 22
    $@2 (47)
        on left: 33
        on right: 34
    WhileStmt <ast> (48)
        on left: 35
        on right: 23
    Block <ast> (49)
        on left: 36
        on right: 12 32 34 35
    CallList <ast> (50)
        on left: 37 38 39
        on right: 27 39
    Math <ast> (51)
        on left: 40 41 42 43 44 45 46
        on right: 24 29 38 39 40 41 42 43 44 47 48 49 50 51 52
    RelOps <ast> (52)
        on left: 47 48 49 50 51 52
        on right: 32 34 35


State 0

    0 $accept: . Program $end

    TYPE    shift, and go to state 1
    ID      shift, and go to state 2
    IF      shift, and go to state 3
    WHILE   shift, and go to state 4
    OPAREN  shift, and go to state 5
    NUMBER  shift, and go to state 6
    WRITE   shift, and go to state 7
    RETURN  shift, and go to state 8

    TYPE      [reduce using rule 7 (VarDeclList)]
    ID        [reduce using rule 7 (VarDeclList)]
    IF        [reduce using rule 7 (VarDeclList)]
    WHILE     [reduce using rule 7 (VarDeclList)]
    OPAREN    [reduce using rule 7 (VarDeclList)]
    NUMBER    [reduce using rule 7 (VarDeclList)]
    WRITE     [reduce using rule 7 (VarDeclList)]
    RETURN    [reduce using rule 7 (VarDeclList)]
    $default  reduce using rule 7 (VarDeclList)

    Program      go to state 9
    DeclList     go to state 10
    Decl         go to state 11
    VarDeclList  go to state 12
    VarDecl      go to state 13
    FunDecl      go to state 14
    StmtList     go to state 15
    Stmt         go to state 16
    Expr         go to state 17
    IfExpr       go to state 18
    WhileStmt    go to state 19
    Math         go to state 20


State 1

    9 VarDecl: TYPE . ID SEMICOLON
   10        | TYPE . ID OBRACK NUMBER CBRACK SEMICOLON
   12 FunDecl: TYPE . ID OPAREN $@1 ParamDecList CPAREN Block

    ID  shift, and go to state 21


State 2

   25 Expr: ID . EQ ID
   26     | ID . EQ NUMBER
   27     | ID . EQ ID OPAREN CallList CPAREN
   28     | ID . OBRACK Expr CBRACK EQ Expr
   29     | ID . EQ Math
   45 Math: ID .

    EQ      shift, and go to state 22
    OBRACK  shift, and go to state 23

    $default  reduce using rule 45 (Math)


State 3

   32 IfExpr: IF . OPAREN RelOps CPAREN Block
   34       | IF . OPAREN RelOps CPAREN Block $@2 ELSE Block

    OPAREN  shift, and go to state 24


State 4

   35 WhileStmt: WHILE . OPAREN RelOps CPAREN Block

    OPAREN  shift, and go to state 25


State 5

   44 Math: OPAREN . Math CPAREN

    ID      shift, and go to state 26
    OPAREN  shift, and go to state 5
    NUMBER  shift, and go to state 6

    Math  go to state 27


State 6

   46 Math: NUMBER .

    $default  reduce using rule 46 (Math)


State 7

   30 Expr: WRITE . ID

    ID  shift, and go to state 28


State 8

   31 Expr: RETURN . ID

    ID  shift, and go to state 29


State 9

    0 $accept: Program . $end

    $end  shift, and go to state 30


State 10

    1 Program: DeclList .

    $default  reduce using rule 1 (Program)


State 11

    2 DeclList: Decl . DeclList
    3         | Decl .

    TYPE    shift, and go to state 1
    ID      shift, and go to state 2
    IF      shift, and go to state 3
    WHILE   shift, and go to state 4
    OPAREN  shift, and go to state 5
    NUMBER  shift, and go to state 6
    WRITE   shift, and go to state 7
    RETURN  shift, and go to state 8

    $end      reduce using rule 3 (DeclList)
    $end      [reduce using rule 7 (VarDeclList)]
    TYPE      [reduce using rule 7 (VarDeclList)]
    ID        [reduce using rule 7 (VarDeclList)]
    IF        [reduce using rule 7 (VarDeclList)]
    WHILE     [reduce using rule 7 (VarDeclList)]
    OPAREN    [reduce using rule 7 (VarDeclList)]
    NUMBER    [reduce using rule 7 (VarDeclList)]
    WRITE     [reduce using rule 7 (VarDeclList)]
    RETURN    [reduce using rule 7 (VarDeclList)]
    $default  reduce using rule 3 (DeclList)

    DeclList     go to state 31
    Decl         go to state 11
    VarDeclList  go to state 12
    VarDecl      go to state 13
    FunDecl      go to state 14
    StmtList     go to state 15
    Stmt         go to state 16
    Expr         go to state 17
    IfExpr       go to state 18
    WhileStmt    go to state 19
    Math         go to state 20


State 12

    5 Decl: VarDeclList .

    $default  reduce using rule 5 (Decl)


State 13

    8 VarDeclList: VarDecl . VarDeclList

    TYPE  shift, and go to state 32

    TYPE      [reduce using rule 7 (VarDeclList)]
    $default  reduce using rule 7 (VarDeclList)

    VarDeclList  go to state 33
    VarDecl      go to state 13


State 14

    4 Decl: FunDecl .

    $default  reduce using rule 4 (Decl)


State 15

    6 Decl: StmtList .

    $default  reduce using rule 6 (Decl)


State 16

   19 StmtList: Stmt .
   20         | Stmt . StmtList

    ID      shift, and go to state 2
    IF      shift, and go to state 3
    WHILE   shift, and go to state 4
    OPAREN  shift, and go to state 5
    NUMBER  shift, and go to state 6
    WRITE   shift, and go to state 7
    RETURN  shift, and go to state 8

    ID        [reduce using rule 19 (StmtList)]
    IF        [reduce using rule 19 (StmtList)]
    WHILE     [reduce using rule 19 (StmtList)]
    OPAREN    [reduce using rule 19 (StmtList)]
    NUMBER    [reduce using rule 19 (StmtList)]
    WRITE     [reduce using rule 19 (StmtList)]
    RETURN    [reduce using rule 19 (StmtList)]
    $default  reduce using rule 19 (StmtList)

    StmtList   go to state 34
    Stmt       go to state 16
    Expr       go to state 17
    IfExpr     go to state 18
    WhileStmt  go to state 19
    Math       go to state 20


State 17

   21 Stmt: Expr . SEMICOLON

    SEMICOLON  shift, and go to state 35


State 18

   22 Stmt: IfExpr .

    $default  reduce using rule 22 (Stmt)


State 19

   23 Stmt: WhileStmt .

    $default  reduce using rule 23 (Stmt)


State 20

   24 Expr: Math .
   40 Math: Math . PLUS Math
   41     | Math . MINUS Math
   42     | Math . MULTIPLY Math
   43     | Math . DIVIDE Math

    PLUS      shift, and go to state 36
    MINUS     shift, and go to state 37
    MULTIPLY  shift, and go to state 38
    DIVIDE    shift, and go to state 39

    $default  reduce using rule 24 (Expr)


State 21

    9 VarDecl: TYPE ID . SEMICOLON
   10        | TYPE ID . OBRACK NUMBER CBRACK SEMICOLON
   12 FunDecl: TYPE ID . OPAREN $@1 ParamDecList CPAREN Block

    SEMICOLON  shift, and go to state 40
    OPAREN     shift, and go to state 41
    OBRACK     shift, and go to state 42


State 22

   25 Expr: ID EQ . ID
   26     | ID EQ . NUMBER
   27     | ID EQ . ID OPAREN CallList CPAREN
   29     | ID EQ . Math

    ID      shift, and go to state 43
    OPAREN  shift, and go to state 5
    NUMBER  shift, and go to state 44

    Math  go to state 45


State 23

   28 Expr: ID OBRACK . Expr CBRACK EQ Expr

    ID      shift, and go to state 2
    OPAREN  shift, and go to state 5
    NUMBER  shift, and go to state 6
    WRITE   shift, and go to state 7
    RETURN  shift, and go to state 8

    Expr  go to state 46
    Math  go to state 20


State 24

   32 IfExpr: IF OPAREN . RelOps CPAREN Block
   34       | IF OPAREN . RelOps CPAREN Block $@2 ELSE Block

    ID      shift, and go to state 26
    OPAREN  shift, and go to state 5
    NUMBER  shift, and go to state 6

    Math    go to state 47
    RelOps  go to state 48


State 25

   35 WhileStmt: WHILE OPAREN . RelOps CPAREN Block

    ID      shift, and go to state 26
    OPAREN  shift, and go to state 5
    NUMBER  shift, and go to state 6

    Math    go to state 47
    RelOps  go to state 49


State 26

   45 Math: ID .

    $default  reduce using rule 45 (Math)


State 27

   40 Math: Math . PLUS Math
   41     | Math . MINUS Math
   42     | Math . MULTIPLY Math
   43     | Math . DIVIDE Math
   44     | OPAREN Math . CPAREN

    CPAREN    shift, and go to state 50
    PLUS      shift, and go to state 36
    MINUS     shift, and go to state 37
    MULTIPLY  shift, and go to state 38
    DIVIDE    shift, and go to state 39


State 28

   30 Expr: WRITE ID .

    $default  reduce using rule 30 (Expr)


State 29

   31 Expr: RETURN ID .

    $default  reduce using rule 31 (Expr)


State 30

    0 $accept: Program $end .

    $default  accept


State 31

    2 DeclList: Decl DeclList .

    $default  reduce using rule 2 (DeclList)


State 32

    9 VarDecl: TYPE . ID SEMICOLON
   10        | TYPE . ID OBRACK NUMBER CBRACK SEMICOLON

    ID  shift, and go to state 51


State 33

    8 VarDeclList: VarDecl VarDeclList .

    $default  reduce using rule 8 (VarDeclList)


State 34

   20 StmtList: Stmt StmtList .

    $default  reduce using rule 20 (StmtList)


State 35

   21 Stmt: Expr SEMICOLON .

    $default  reduce using rule 21 (Stmt)


State 36

   40 Math: Math PLUS . Math

    ID      shift, and go to state 26
    OPAREN  shift, and go to state 5
    NUMBER  shift, and go to state 6

    Math  go to state 52


State 37

   41 Math: Math MINUS . Math

    ID      shift, and go to state 26
    OPAREN  shift, and go to state 5
    NUMBER  shift, and go to state 6

    Math  go to state 53


State 38

   42 Math: Math MULTIPLY . Math

    ID      shift, and go to state 26
    OPAREN  shift, and go to state 5
    NUMBER  shift, and go to state 6

    Math  go to state 54


State 39

   43 Math: Math DIVIDE . Math

    ID      shift, and go to state 26
    OPAREN  shift, and go to state 5
    NUMBER  shift, and go to state 6

    Math  go to state 55


State 40

    9 VarDecl: TYPE ID SEMICOLON .

    $default  reduce using rule 9 (VarDecl)


State 41

   12 FunDecl: TYPE ID OPAREN . $@1 ParamDecList CPAREN Block

    $default  reduce using rule 11 ($@1)

    $@1  go to state 56


State 42

   10 VarDecl: TYPE ID OBRACK . NUMBER CBRACK SEMICOLON

    NUMBER  shift, and go to state 57


State 43

   25 Expr: ID EQ ID .
   27     | ID EQ ID . OPAREN CallList CPAREN
   45 Math: ID .

    OPAREN  shift, and go to state 58

    SEMICOLON  reduce using rule 25 (Expr)
    SEMICOLON  [reduce using rule 45 (Math)]
    CBRACK     reduce using rule 25 (Expr)
    CBRACK     [reduce using rule 45 (Math)]
    $default   reduce using rule 45 (Math)


State 44

   26 Expr: ID EQ NUMBER .
   46 Math: NUMBER .

    SEMICOLON  reduce using rule 26 (Expr)
    SEMICOLON  [reduce using rule 46 (Math)]
    CBRACK     reduce using rule 26 (Expr)
    CBRACK     [reduce using rule 46 (Math)]
    $default   reduce using rule 46 (Math)


State 45

   29 Expr: ID EQ Math .
   40 Math: Math . PLUS Math
   41     | Math . MINUS Math
   42     | Math . MULTIPLY Math
   43     | Math . DIVIDE Math

    PLUS      shift, and go to state 36
    MINUS     shift, and go to state 37
    MULTIPLY  shift, and go to state 38
    DIVIDE    shift, and go to state 39

    $default  reduce using rule 29 (Expr)


State 46

   28 Expr: ID OBRACK Expr . CBRACK EQ Expr

    CBRACK  shift, and go to state 59


State 47

   40 Math: Math . PLUS Math
   41     | Math . MINUS Math
   42     | Math . MULTIPLY Math
   43     | Math . DIVIDE Math
   47 RelOps: Math . GTE Math
   48       | Math . LTE Math
   49       | Math . GT Math
   50       | Math . LT Math
   51       | Math . EQEQ Math
   52       | Math . NOTEQ Math

    PLUS      shift, and go to state 36
    MINUS     shift, and go to state 37
    MULTIPLY  shift, and go to state 38
    DIVIDE    shift, and go to state 39
    LT        shift, and go to state 60
    GT        shift, and go to state 61
    GTE       shift, and go to state 62
    LTE       shift, and go to state 63
    EQEQ      shift, and go to state 64
    NOTEQ     shift, and go to state 65


State 48

   32 IfExpr: IF OPAREN RelOps . CPAREN Block
   34       | IF OPAREN RelOps . CPAREN Block $@2 ELSE Block

    CPAREN  shift, and go to state 66


State 49

   35 WhileStmt: WHILE OPAREN RelOps . CPAREN Block

    CPAREN  shift, and go to state 67


State 50

   44 Math: OPAREN Math CPAREN .

    $default  reduce using rule 44 (Math)


State 51

    9 VarDecl: TYPE ID . SEMICOLON
   10        | TYPE ID . OBRACK NUMBER CBRACK SEMICOLON

    SEMICOLON  shift, and go to state 40
    OBRACK     shift, and go to state 42


State 52

   40 Math: Math . PLUS Math
   40     | Math PLUS Math .
   41     | Math . MINUS Math
   42     | Math . MULTIPLY Math
   43     | Math . DIVIDE Math

    MULTIPLY  shift, and go to state 38
    DIVIDE    shift, and go to state 39

    $default  reduce using rule 40 (Math)


State 53

   40 Math: Math . PLUS Math
   41     | Math . MINUS Math
   41     | Math MINUS Math .
   42     | Math . MULTIPLY Math
   43     | Math . DIVIDE Math

    MULTIPLY  shift, and go to state 38
    DIVIDE    shift, and go to state 39

    $default  reduce using rule 41 (Math)


State 54

   40 Math: Math . PLUS Math
   41     | Math . MINUS Math
   42     | Math . MULTIPLY Math
   42     | Math MULTIPLY Math .
   43     | Math . DIVIDE Math

    $default  reduce using rule 42 (Math)


State 55

   40 Math: Math . PLUS Math
   41     | Math . MINUS Math
   42     | Math . MULTIPLY Math
   43     | Math . DIVIDE Math
   43     | Math DIVIDE Math .

    $default  reduce using rule 43 (Math)


State 56

   12 FunDecl: TYPE ID OPAREN $@1 . ParamDecList CPAREN Block

    TYPE  shift, and go to state 68

    $default  reduce using rule 13 (ParamDecList)

    ParamDecList      go to state 69
    ParamDecListTail  go to state 70
    ParamDecl         go to state 71


State 57

   10 VarDecl: TYPE ID OBRACK NUMBER . CBRACK SEMICOLON

    CBRACK  shift, and go to state 72


State 58

   27 Expr: ID EQ ID OPAREN . CallList CPAREN

    ID      shift, and go to state 26
    OPAREN  shift, and go to state 5
    NUMBER  shift, and go to state 6

    $default  reduce using rule 37 (CallList)

    CallList  go to state 73
    Math      go to state 74


State 59

   28 Expr: ID OBRACK Expr CBRACK . EQ Expr

    EQ  shift, and go to state 75


State 60

   50 RelOps: Math LT . Math

    ID      shift, and go to state 26
    OPAREN  shift, and go to state 5
    NUMBER  shift, and go to state 6

    Math  go to state 76


State 61

   49 RelOps: Math GT . Math

    ID      shift, and go to state 26
    OPAREN  shift, and go to state 5
    NUMBER  shift, and go to state 6

    Math  go to state 77


State 62

   47 RelOps: Math GTE . Math

    ID      shift, and go to state 26
    OPAREN  shift, and go to state 5
    NUMBER  shift, and go to state 6

    Math  go to state 78


State 63

   48 RelOps: Math LTE . Math

    ID      shift, and go to state 26
    OPAREN  shift, and go to state 5
    NUMBER  shift, and go to state 6

    Math  go to state 79


State 64

   51 RelOps: Math EQEQ . Math

    ID      shift, and go to state 26
    OPAREN  shift, and go to state 5
    NUMBER  shift, and go to state 6

    Math  go to state 80


State 65

   52 RelOps: Math NOTEQ . Math

    ID      shift, and go to state 26
    OPAREN  shift, and go to state 5
    NUMBER  shift, and go to state 6

    Math  go to state 81


State 66

   32 IfExpr: IF OPAREN RelOps CPAREN . Block
   34       | IF OPAREN RelOps CPAREN . Block $@2 ELSE Block

    OCBRACE  shift, and go to state 82

    Block  go to state 83


State 67

   35 WhileStmt: WHILE OPAREN RelOps CPAREN . Block

    OCBRACE  shift, and go to state 82

    Block  go to state 84


State 68

   17 ParamDecl: TYPE . ID
   18          | TYPE . ID OBRACK CBRACK

    ID  shift, and go to state 85


State 69

   12 FunDecl: TYPE ID OPAREN $@1 ParamDecList . CPAREN Block

    CPAREN  shift, and go to state 86


State 70

   14 ParamDecList: ParamDecListTail .

    $default  reduce using rule 14 (ParamDecList)


State 71

   15 ParamDecListTail: ParamDecl .
   16                 | ParamDecl . COMMA ParamDecListTail

    COMMA  shift, and go to state 87

    $default  reduce using rule 15 (ParamDecListTail)


State 72

   10 VarDecl: TYPE ID OBRACK NUMBER CBRACK . SEMICOLON

    SEMICOLON  shift, and go to state 88


State 73

   27 Expr: ID EQ ID OPAREN CallList . CPAREN

    CPAREN  shift, and go to state 89


State 74

   38 CallList: Math .
   39         | Math . COMMA CallList
   40 Math: Math . PLUS Math
   41     | Math . MINUS Math
   42     | Math . MULTIPLY Math
   43     | Math . DIVIDE Math

    COMMA     shift, and go to state 90
    PLUS      shift, and go to state 36
    MINUS     shift, and go to state 37
    MULTIPLY  shift, and go to state 38
    DIVIDE    shift, and go to state 39

    $default  reduce using rule 38 (CallList)


State 75

   28 Expr: ID OBRACK Expr CBRACK EQ . Expr

    ID      shift, and go to state 2
    OPAREN  shift, and go to state 5
    NUMBER  shift, and go to state 6
    WRITE   shift, and go to state 7
    RETURN  shift, and go to state 8

    Expr  go to state 91
    Math  go to state 20


State 76

   40 Math: Math . PLUS Math
   41     | Math . MINUS Math
   42     | Math . MULTIPLY Math
   43     | Math . DIVIDE Math
   50 RelOps: Math LT Math .

    PLUS      shift, and go to state 36
    MINUS     shift, and go to state 37
    MULTIPLY  shift, and go to state 38
    DIVIDE    shift, and go to state 39

    $default  reduce using rule 50 (RelOps)


State 77

   40 Math: Math . PLUS Math
   41     | Math . MINUS Math
   42     | Math . MULTIPLY Math
   43     | Math . DIVIDE Math
   49 RelOps: Math GT Math .

    PLUS      shift, and go to state 36
    MINUS     shift, and go to state 37
    MULTIPLY  shift, and go to state 38
    DIVIDE    shift, and go to state 39

    $default  reduce using rule 49 (RelOps)


State 78

   40 Math: Math . PLUS Math
   41     | Math . MINUS Math
   42     | Math . MULTIPLY Math
   43     | Math . DIVIDE Math
   47 RelOps: Math GTE Math .

    PLUS      shift, and go to state 36
    MINUS     shift, and go to state 37
    MULTIPLY  shift, and go to state 38
    DIVIDE    shift, and go to state 39

    $default  reduce using rule 47 (RelOps)


State 79

   40 Math: Math . PLUS Math
   41     | Math . MINUS Math
   42     | Math . MULTIPLY Math
   43     | Math . DIVIDE Math
   48 RelOps: Math LTE Math .

    PLUS      shift, and go to state 36
    MINUS     shift, and go to state 37
    MULTIPLY  shift, and go to state 38
    DIVIDE    shift, and go to state 39

    $default  reduce using rule 48 (RelOps)


State 80

   40 Math: Math . PLUS Math
   41     | Math . MINUS Math
   42     | Math . MULTIPLY Math
   43     | Math . DIVIDE Math
   51 RelOps: Math EQEQ Math .

    PLUS      shift, and go to state 36
    MINUS     shift, and go to state 37
    MULTIPLY  shift, and go to state 38
    DIVIDE    shift, and go to state 39

    $default  reduce using rule 51 (RelOps)


State 81

   40 Math: Math . PLUS Math
   41     | Math . MINUS Math
   42     | Math . MULTIPLY Math
   43     | Math . DIVIDE Math
   52 RelOps: Math NOTEQ Math .

    PLUS      shift, and go to state 36
    MINUS     shift, and go to state 37
    MULTIPLY  shift, and go to state 38
    DIVIDE    shift, and go to state 39

    $default  reduce using rule 52 (RelOps)


State 82

   36 Block: OCBRACE . VarDeclList StmtList CCBRACE

    TYPE  shift, and go to state 32

    $default  reduce using rule 7 (VarDeclList)

    VarDeclList  go to state 92
    VarDecl      go to state 13


State 83

   32 IfExpr: IF OPAREN RelOps CPAREN Block .
   34       | IF OPAREN RelOps CPAREN Block . $@2 ELSE Block

    ELSE      reduce using rule 33 ($@2)
    $default  reduce using rule 32 (IfExpr)

    $@2  go to state 93


State 84

   35 WhileStmt: WHILE OPAREN RelOps CPAREN Block .

    $default  reduce using rule 35 (WhileStmt)


State 85

   17 ParamDecl: TYPE ID .
   18          | TYPE ID . OBRACK CBRACK

    OBRACK  shift, and go to state 94

    $default  reduce using rule 17 (ParamDecl)


State 86

   12 FunDecl: TYPE ID OPAREN $@1 ParamDecList CPAREN . Block

    OCBRACE  shift, and go to state 82

    Block  go to state 95


State 87

   16 ParamDecListTail: ParamDecl COMMA . ParamDecListTail

    TYPE  shift, and go to state 68

    ParamDecListTail  go to state 96
    ParamDecl         go to state 71


State 88

   10 VarDecl: TYPE ID OBRACK NUMBER CBRACK SEMICOLON .

    $default  reduce using rule 10 (VarDecl)


State 89

   27 Expr: ID EQ ID OPAREN CallList CPAREN .

    $default  reduce using rule 27 (Expr)


State 90

   39 CallList: Math COMMA . CallList

    ID      shift, and go to state 26
    OPAREN  shift, and go to state 5
    NUMBER  shift, and go to state 6

    $default  reduce using rule 37 (CallList)

    CallList  go to state 97
    Math      go to state 74


State 91

   28 Expr: ID OBRACK Expr CBRACK EQ Expr .

    $default  reduce using rule 28 (Expr)


State 92

   36 Block: OCBRACE VarDeclList . StmtList CCBRACE

    ID      shift, and go to state 2
    IF      shift, and go to state 3
    WHILE   shift, and go to state 4
    OPAREN  shift, and go to state 5
    NUMBER  shift, and go to state 6
    WRITE   shift, and go to state 7
    RETURN  shift, and go to state 8

    StmtList   go to state 98
    Stmt       go to state 16
    Expr       go to state 17
    IfExpr     go to state 18
    WhileStmt  go to state 19
    Math       go to state 20


State 93

   34 IfExpr: IF OPAREN RelOps CPAREN Block $@2 . ELSE Block

    ELSE  shift, and go to state 99


State 94

   18 ParamDecl: TYPE ID OBRACK . CBRACK

    CBRACK  shift, and go to state 100


State 95

   12 FunDecl: TYPE ID OPAREN $@1 ParamDecList CPAREN Block .

    $default  reduce using rule 12 (FunDecl)


State 96

   16 ParamDecListTail: ParamDecl COMMA ParamDecListTail .

    $default  reduce using rule 16 (ParamDecListTail)


State 97

   39 CallList: Math COMMA CallList .

    $default  reduce using rule 39 (CallList)


State 98

   36 Block: OCBRACE VarDeclList StmtList . CCBRACE

    CCBRACE  shift, and go to state 101


State 99

   34 IfExpr: IF OPAREN RelOps CPAREN Block $@2 ELSE . Block

    OCBRACE  shift, and go to state 82

    Block  go to state 102


State 100

   18 ParamDecl: TYPE ID OBRACK CBRACK .

    $default  reduce using rule 18 (ParamDecl)


State 101

   36 Block: OCBRACE VarDeclList StmtList CCBRACE .

    $default  reduce using rule 36 (Block)


State 102

   34 IfExpr: IF OPAREN RelOps CPAREN Block $@2 ELSE Block .

    $default  reduce using rule 34 (IfExpr)
